version: '3.8'
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        hostname: zookeeper
        restart: always
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "2181:2181"
        networks:
            - streaming_demo
        healthcheck:
            test: ["CMD", "sh", "-c", "echo srvr | nc localhost 2181 || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 3        

    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        hostname: kafka
        restart: always
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092 # localhost:39091 != :39091 karena localhost:39091 akan di forward ke 127.0.0.1:39091 di host machine sedangkan :39091 akan di forward ke 0.0.0.0:39091 sehinggak bisa diakses oleh host machine
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
        healthcheck:
            test: ["CMD", "sh", "-c", "nc -z localhost 9092 || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 3
        networks:
            - streaming_demo           

    control-center:
        image: confluentinc/cp-enterprise-control-center:latest
        container_name: control-center
        hostname: control-center
        restart: always
        ports:
            - "9021:9021"
        depends_on:
            - schema-registry
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
            CONTROL_CENTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            CONFLIENT_METRICS_ENABLE: 'false'
            PORT: 9021
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9021/health" ]
            interval: 30s
            timeout: 10s
            retries: 5            
        networks:
            - streaming_demo

    schema-registry:
        image: confluentinc/cp-schema-registry:latest
        restart: always
        depends_on:
            - kafka
            - zookeeper
        ports:
            - 8081:8081
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        networks:
            - streaming_demo        

networks:
    streaming_demo:
        driver: bridge